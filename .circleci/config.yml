# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  setup:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/ruby:2.7.2
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run: gem update 
      - run: gem install bundler
      - run: bundle install
  test: 
    docker:
      - image: circleci/ruby:2.7.2
        environment: 
          DATABASE_URL: postgresql://localhost:3000
      # - image: circleci/postgres11 
    parallelism: 2
    steps:
      - run: gem update
      - run: gem install bundler 
      - run: bundle install
      - run: sudo apt install postgresql-client
      - run: dockersize - wait tcp://localhost:3000 - timeout 1m
      - run: bundle exec rake db:creare
      - run: bundle exec rake db:schema:load
      - run: 
          name: specs
          command: |
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec $TESTFILES --profile 10 --format RspecJunitFormatter --out ~/spec-timings/rspec.xml --format progress
      - store_test_results:
          path: ~/spec-timings

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  setup_and_test:
    jobs:
      - setup
      - test:
          requires:
            - setup